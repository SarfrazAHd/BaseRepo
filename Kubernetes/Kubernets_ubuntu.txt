Pre-requisites To Install Kubernetes 
VMs:-

Master:
2 GB RAM
2 Cores of CPU

Slave/ Node:
1 GB RAM
1 Core of CPU


Pre-Installation Steps On Both Master & Slave (To Install Kubernetes)

$sudo su
# apt-get update

Turn Off Swap Space
# swapoff -a
# vim /etc/fstab

Update The Hostnames
#  vim /etc/hostname



Update The Hosts File With IPs Of Master & Node
# ifconfig
# vi /etc/hosts
 add "master_ip  and name"
"add Slave_ip and name"



Setting Static IP Addresses
# vi /etc/network/interfaces
add "auto enp0s8
iface enp0s8 inet static
address <IP-Address-Of-VM>"


Install OpenSSH-Server
# sudo apt-get install openssh-server


Install Docker
# sudo su
# apt-get update 
# apt-get install -y docker.io

# apt-get update && apt-get install -y apt-transport-https curl
# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
# cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update



Install kubeadm, Kubelet And Kubectl
# apt-get install -y kubelet kubeadm kubectl 



Updating Kubernetes Configuration
# vi/etc/systemd/system/kubelet.service.d/10-kubeadm.conf

add "Environment=”cgroup-driver=systemd/cgroup-driver=cgroupfs”"



Steps Only For Kubernetes Master VM (kmaster)

Step 1
# kubeadm init --apiserver-advertise-address=<ip-address-of-kmaster-vm> --pod-network-cidr=192.168.0.0/16


Step 2
$ mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config


$ kubectl get pods -o wide --all-namespaces


$ kubectl apply -f https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/kubeadm/1.7/calico.yaml


$ kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml


$ kubectl proxy


$ kubectl create serviceaccount dashboard -n default


$ kubectl create clusterrolebinding dashboard-admin -n default \
  --clusterrole=cluster-admin \
  --serviceaccount=default:dashboard


$ kubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode





























